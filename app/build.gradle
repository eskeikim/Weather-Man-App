plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-android-extensions'
}
android {
    compileSdk 31

    defaultConfig {
        applicationId "com.skimani.weatherapp"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "API_URL", "\"https://community-open-weather-map.p.rapidapi.com/\""
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.4.1'
    implementation 'androidx.navigation:navigation-ui-ktx:2.4.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    implementation "androidx.fragment:fragment-ktx:1.4.0"
    /* Room */
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    androidTestImplementation "androidx.room:room-testing:$room_version"

    /* Glide */
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    //multidex
    implementation "androidx.multidex:multidex:$multidex_version"

    /* Hilt Dagger */
    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha03"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    /* retrofit */
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    /* okHTTP */
    implementation "com.squareup.okhttp3:okhttp:$ok_http_version"
    implementation "com.squareup.okhttp3:okhttp-urlconnection:$ok_http_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    /* material */
    implementation "com.google.android.material:material:$material_version"
    /* Lifecycle */
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_extensions_ktx_version"
    implementation "androidx.lifecycle:lifecycle-common:$lifecycle_extensions_ktx_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_extensions_ktx_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_extensions_ktx_version"
    //logging
    implementation "com.jakewharton.timber:timber:$timber_version"
    //Lottie library
    def lottieVersion = "4.0.0"
    implementation "com.airbnb.android:lottie:$lottieVersion"
}
